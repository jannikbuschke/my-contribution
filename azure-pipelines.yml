trigger:
- master
- feature/quick-session

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'

steps:
- checkout: self
  submodules: true

# - task: Cache@2
#   inputs:
#     key: 'npm | "$(Agent.OS)" | package-lock.json'
#     restoreKeys: |
#       npm | "$(Agent.OS)"
#       npm
#     path: $(Build.SourcesDirectory)/node_modules
#   displayName: Cache npm

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: 'install'
    workingDir: 'app/web'

- task: Npm@1
  displayName: 'npm run build (app/web)'
  env:
    REACT_APP_BUILD_BUILDID: $(Build.BuildId)
    REACT_APP_BUILD_BUILDNUMBER: $(Build.BuildNumber)
    REACT_APP_BUILD_SOURCEVERSION: $(Build.SourceVersion)
  inputs:
    command: 'custom'
    workingDir: 'app/web'
    customCommand: 'run build'

# - task: DotNetCoreCLI@2
#   displayName: 'dotnet test'
#   inputs:
#     command: 'test'
#     projects: './test/Test.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: 'publish'
    publishWebProjects: false # mutually exclusive with 'projects'
    projects: ./app/App.csproj
    arguments: --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'arm-template'
    artifactName: 'arm-template'